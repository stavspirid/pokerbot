# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto.game import game_pb2 as proto_dot_game_dot_game__pb2


class GameCoordinatorControllerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Rename = channel.unary_unary(
                '/game.GameCoordinatorController/Rename',
                request_serializer=proto_dot_game_dot_game__pb2.PlayerRenameRequest.SerializeToString,
                response_deserializer=proto_dot_game_dot_game__pb2.PlayerRenameResponse.FromString,
                )
        self.Create = channel.unary_unary(
                '/game.GameCoordinatorController/Create',
                request_serializer=proto_dot_game_dot_game__pb2.CreateGameRequest.SerializeToString,
                response_deserializer=proto_dot_game_dot_game__pb2.CreateGameResponse.FromString,
                )
        self.Play = channel.stream_stream(
                '/game.GameCoordinatorController/Play',
                request_serializer=proto_dot_game_dot_game__pb2.PlayGameRequest.SerializeToString,
                response_deserializer=proto_dot_game_dot_game__pb2.PlayGameResponse.FromString,
                )
        self.Tournament = channel.unary_unary(
                '/game.GameCoordinatorController/Tournament',
                request_serializer=proto_dot_game_dot_game__pb2.TournamentRequest.SerializeToString,
                response_deserializer=proto_dot_game_dot_game__pb2.TournamentResponse.FromString,
                )


class GameCoordinatorControllerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Rename(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Create(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Play(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Tournament(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GameCoordinatorControllerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Rename': grpc.unary_unary_rpc_method_handler(
                    servicer.Rename,
                    request_deserializer=proto_dot_game_dot_game__pb2.PlayerRenameRequest.FromString,
                    response_serializer=proto_dot_game_dot_game__pb2.PlayerRenameResponse.SerializeToString,
            ),
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=proto_dot_game_dot_game__pb2.CreateGameRequest.FromString,
                    response_serializer=proto_dot_game_dot_game__pb2.CreateGameResponse.SerializeToString,
            ),
            'Play': grpc.stream_stream_rpc_method_handler(
                    servicer.Play,
                    request_deserializer=proto_dot_game_dot_game__pb2.PlayGameRequest.FromString,
                    response_serializer=proto_dot_game_dot_game__pb2.PlayGameResponse.SerializeToString,
            ),
            'Tournament': grpc.unary_unary_rpc_method_handler(
                    servicer.Tournament,
                    request_deserializer=proto_dot_game_dot_game__pb2.TournamentRequest.FromString,
                    response_serializer=proto_dot_game_dot_game__pb2.TournamentResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'game.GameCoordinatorController', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class GameCoordinatorController(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Rename(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/game.GameCoordinatorController/Rename',
            proto_dot_game_dot_game__pb2.PlayerRenameRequest.SerializeToString,
            proto_dot_game_dot_game__pb2.PlayerRenameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/game.GameCoordinatorController/Create',
            proto_dot_game_dot_game__pb2.CreateGameRequest.SerializeToString,
            proto_dot_game_dot_game__pb2.CreateGameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Play(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/game.GameCoordinatorController/Play',
            proto_dot_game_dot_game__pb2.PlayGameRequest.SerializeToString,
            proto_dot_game_dot_game__pb2.PlayGameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Tournament(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/game.GameCoordinatorController/Tournament',
            proto_dot_game_dot_game__pb2.TournamentRequest.SerializeToString,
            proto_dot_game_dot_game__pb2.TournamentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
